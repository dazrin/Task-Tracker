{"version":3,"sources":["Components/Button.js","Components/Header.js","Components/Task.js","Components/Tasks.js","Components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","console","log","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a19ece74.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\n\r\n// You can destructure the 'props' object and include the specifc props you want to pass in\r\n// This allows you to pass in each prop separately, rather than needing to use dot notation \r\n// Instead of this -> (props.prop) you can do this -> (prop)\r\nconst Button = ({ color, text, onClick }) => {\r\n    return (\r\n        <button onClick={onClick} style={{ backgroundColor: color }} className='btn'>{text}</button>\r\n\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue'\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n    const onClick = () => {\r\n        console.log('Click');\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <h1 className='header'>{title}</h1>\r\n            <Button color={showAdd ? 'orange' : 'green'} text={showAdd ? 'Hide form' : 'Add a Task!'} onClick={onAdd}/>\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker',\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\n// const headingStyle = {\r\n//     color: 'red',\r\n//     backgroundColor: 'black' \r\n// }\r\n\r\nexport default Header;\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\r\n            <h3>\r\n            {task.text} <FaTimes style={{ color: 'red', cursor: 'pointer' }}\r\n            onClick={() => onDelete(task.id)} />\r\n            </h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n    return (\r\n        <>\r\n            {tasks.map((task) => (\r\n                <Task key={task.id} task={task} \r\n                onDelete={onDelete} onToggle={onToggle} />\r\n                ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import { useState } from 'react'\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(!text) {\r\n            alert('Please add a task')\r\n            return\r\n        }\r\n\r\n        onAdd({ text, day, reminder })\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input type='text' placeholder='Add Task' value={text} onChange={(e) => setText(e.target.value)} />\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Day & Time</label>\r\n                <input type='text' placeholder='Add Day & Time' value={day} onChange={(e) => setDay(e.target.value)} />\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input type='checkbox' checked={reminder} value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)}/>\r\n            </div>\r\n\r\n            <input type='submit' value='Save Task' className='btn btn-block' />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","// Dependancies\nimport { useState } from 'react' // useState is a method that allows a functional component to use the state object\n\n// Importing components being nested into our App\nimport './App.css'; // App styling\nimport Header from './Components/Header' // Header component\nimport Tasks from './Components/Tasks'  // Tasks component\nimport AddTask from './Components/AddTask' // AddTask component\n\n\n// Main component: App\nfunction App() {\n\n  const [showAddTask, setShowAddTask] = useState(false);\n\n  // Setting data called 'tasks' to be accessible by state object,\n  // Declaring setTasks as a method to manip data\n  const [tasks, setTasks] = useState([\n    {\n        id: 1,\n        text: 'Doctors Appointment',\n        day: 'Feb.5th at 2:30pm',\n        reminder: true,\n    },\n    {\n        id: 2,\n        text: 'Meeting at School',\n        day: 'Feb 6th at 1:30pm',\n        reminder: true,\n    },\n    {\n        id: 3,\n        text: 'Food Shopping',\n        day: 'Feb 5th at 2:30pm',\n        reminder: false,\n    }\n])\n\n// - Add Task Function -\nconst addTask = (task) => {\n  console.log(task);\n\n  // Generates a random number to assign to id for new tasks and logs the id to console\n  const id = Math.floor(Math.random() * 10000) + 1;\n  console.log(id);\n\n  // new task stores id and other tasks\n  const newTask = { id, ...task }\n\n  // set state of tasks to have all previous tasks as well as the newTask being added\n  setTasks([...tasks, newTask])\n}\n\n// - Delete Task Function -\n// Takes in id of task\n// Calls on 'setTasks' to manipulate tasks data\n// Call on ES6 .filter() method to look through each task,\n// then find the id of the task id being passed in,\n// and create a new array of tasks based on the condition, which is:\n// The task.id should have an id equal to the id that was passed in (b/c it's being deleted)\nconst deleteTask = (id) => {\n  console.log('delete', id)\n\n  setTasks(tasks.filter((task) => task.id !== id ))\n}\n\n// - Toggle Reminder Function -\n// Passes in task.id, catching task as a prop\n// Calls on setTasks to manipulate the tasks useState data\n// Call on ES6 .map() method to take in and apply a function to each task, which is:\n// if the task's id in the current iteration is equal to id being passed in,\n// then return an object that copies/ spreads all the properties and values of the tasks,\n// but change the 'reminder:' property to set it to the opposite of what it already is\n// otherwise return the task (no change)\nconst toggleReminder = (id) => {\n  console.log(id)\n\n  setTasks(\n    tasks.map((task) =>\n     task.id === id ? { ...task, reminder:\n     !task.reminder } : task\n    )\n  )\n}\n\n  // You can define variables within the component and use them in curly braces within the return (see h2)\n  const name = 'Dazrin'\n\n  return (\n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask} />\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? (\n       <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/>\n       ) : (\n      'No tasks To Show'\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// Dependancies\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// ReactDOM = virtual DOM\n// ReactDOM has a method called .render() that renders the main 'App' component to react's virtual DOM\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}